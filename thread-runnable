/******************************************************************************

                            Online Java Compiler.
                Code, Compile, Run and Debug java program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/

// Class that implements the Runnable interface
class RunnableTest implements Runnable {
   private Thread t;
   private String threadName;
   
   // Constructor that sets the name of the thread
   RunnableTest( String name) {
      threadName = name;
      System.out.println("Created " +  threadName );
   }
   
   // Method that is executed when the thread is started
   public void run() {
      System.out.println("Currently Running " +  threadName );
      try {
         for(int i = 4; i > 0; i--) {
            System.out.println("Thread is: " + threadName + ", " + i);
            // Let the thread sleep for a while.
            Thread.sleep(50);
         }
      } catch (InterruptedException e) {
         System.out.println("Thread is " +  threadName + " interrupted.");
      }
      System.out.println("Thread is " +  threadName + " exiting!!!");
   }
   
   // Method to start the thread
   public void start () {
      System.out.println("Starting now " +  threadName );
      if (t == null) {
         t = new Thread (this, threadName);
         t.start ();
      }
   }
}

// Main class that creates and starts the threads
class Main {

   public static void main(String args[]) {
      // Create a new object of RunnableTest class with the name "Thread1"
      RunnableTest obj1 = new RunnableTest( "Thread1");
      // Start the thread with name "Thread1"
      obj1.start();
      
      // Create a new object of RunnableTest class with the name "Thread2"
      RunnableTest obj2 = new RunnableTest( "Thread2");
      // Start the thread with name "Thread2"
      obj2.start();
   }   
}
/*
Created Thread1
Starting now Thread1
Created Thread2
Starting now Thread2
Currently Running Thread1
Currently Running Thread2
Thread is: Thread1, 4
Thread is: Thread2, 4
Thread is: Thread1, 3
Thread is: Thread2, 3
Thread is: Thread1, 2
Thread is: Thread2, 2
Thread is: Thread1, 1
Thread is: Thread2, 1
Thread is Thread2 exiting!!!
Thread is Thread1 exiting!!!
*/
